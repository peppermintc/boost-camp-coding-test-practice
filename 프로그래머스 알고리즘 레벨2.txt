1일차 6/19
## 멀쩡한 사각형 그림으로 그릴수있으면 그려보며 규칙 찾기
# 프린터
반복하여 풀어보고 한줄씩 주석 달아보기
# 탑
# 기능개발
# 쇠막대기
메모장 켜서 하나씩 쪼깨서 한칸씩 읽을때의 규칙 찾아냄

2일차 6/20
# 전화번호 목록
안되서 sorting 후 채점하니 성공
# 위장
규칙성을 처음에 잘못 찾음 다시 규칙을 생각해서 맞춤
## 타겟넘버 - 다른사람풀이를 보았음

3일차 6/21
# 다리를 지나는 트럭
한개의 테스트 케이스만 시간초과로 통과하지 못해서
pop(0)를 deque를 import하여 popleft로 바꾸어 주었더니 시간복잡도가 좋아져서 통과하지
## 124나라의 숫자
쉬워보였으나 풀지 못해서 다른사람풀이를 참고함
'124'[n%3]이라는 특이한 방법 사용
# 주식 가격
하나하나 찬찬히 생각해보니 풀음

4일차 6/22
# H-Index 
내 풀이로 안되서 다른사람들의 풀이를 읽어보고 코드는 보지 않고 풀었음
테스트 케이스 한개가 안되서 for 문 range 범위가 1 차이나는 것을 수정하여 정답
# 피보나치 수
무난하게 풀음 걸린 시간 10분 이내
# 스킬트리
데큐 이용 맞게 짠거 같은데 계속 안되는 이유가 데큐는 복사가 바로 안되고 복사하는 방법이 따로 있는듯
내가 푼 것보다 훨씬 더 간단한 풀이가 있었음

5일차 6/23
# 최댓값과 최솟값
15분 정도 걸려서 푼 문제 int와 str을 오가며 비교 
# 오픈채팅방
다른사람풀이보고 2차원 배열 사용하여 for문 돌려서 시간 초과 나는 것을 
dictionary로 간단하게 해결
# 카펫
문제의 입출력 예제를 다시 살펴보며 놓진것이 무엇인지 확인해서 맞춤

6일차 6/24
# 더 맵게
효율성이 통과를 계속 못해서 다른사람 풀이를 보고 알게됨
리스트 append pop으로 시간 초과나면
heapq 사용하여 해결 가능
# 최솟값 만들기
5분만에 푼 문제 쉬운 문제 
sort의 내림차순 이용 sort(reverse=True)
# 다음 큰 숫자
시간복잡도를 지나치게 고려하지 않고 기보적으로 풀었음

7일차 6/25
## 소수 찾기
못풀겠음

8일차 6/26
## 조이스틱
계속 하나의 케이스가 통과하지 못함
결국 다른 사람 풀이 보기도 싫네

6/29
## 가장 큰 정사각형 찾기
못 풀겠어서 다른사람 풀이를 보았음
특이한 규칙을 찾아내었음